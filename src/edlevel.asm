
	INCLUDE	SHIKE2.INC
	INCLUDE	BIOS.INC
	INCLUDE	EDITOR.INC
	INCLUDE	KBD.INC
	INCLUDE	VDP.INC

PTRSPR		EQU	0
MAPSPR		EQU	1

PTRPAT		EQU	LASTPAT
MAPPAT		EQU	PTRPAT+4

LISTCOORD	EQU	00003H
MAPCOORD	EQU	03050H
TEXTCOORD	EQU	03010H
ERRORCOORD	EQU	00000H

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	EDLEVEL
	EXTRN	VDPSYNC,EDINIT

EDLEVEL:CALL	EDINIT
	LD	HL,0
	ADD	HL,SP
	LD	(EDSTACK),HL

ED.LOOP:CALL	LEVELSCR
	CALL	VDPSYNC
	CALL	SELLEVEL
	CALL	SELROOM
	JR	ED.LOOP

	DSEG

EDSTACK:	DW	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG

EXIT:	LD	HL,(EDSTACK)		;LONGJMP FOR EXITING OF EDITOR.
	LD	SP,HL
	RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = ROOM POSITION
;OUTPUT:HL = SCREEN COORDINATES

	CSEG

ROOM2XY:LD	A,D
	RLCA
	RLCA
	RLCA
	LD	D,A
	LD	A,E
	RLCA
	RLCA
	RLCA
	LD	E,A
	LD	HL,MAPCOORD
	ADD	HL,DE
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = ERROR STRING

	CSEG
	EXTRN	PUTCHAR,VDPSYNC,LOCATE,PRINTF,KPRESS

ERROR:	LD	DE,ERRORCOORD
	CALL	LOCATE
	LD	DE,NEW.ERR
	CALL	PRINTF			;PRINT THE ERROR CODE
	CALL	VDPSYNC			;WAIT TO THE VDP
	CALL	KPRESS			;WAIT KEY PRESS

	LD	DE,ERRORCOORD
	CALL	LOCATE
	LD	B,64

E.LOOP:	PUSH	BC			;CLEAN THE ERROR LINE
	LD	A,' '
	CALL	PUTCHAR
	POP	BC
	DJNZ	E.LOOP
	CALL	VDPSYNC
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = LOCATION OF THE MAP IN THE LEVEL
;OUTPUT:HL = ADRESS OF THE ROOM IN THE LEVEL

	CSEG
	EXTRN	MULTEA

ROOMADDR:
	PUSH	DE
	LD	D,0
	LD	A,(LVLYSIZ)
	CALL	MULTEA
	POP	DE
	LD	E,D
	LD	D,0
	ADD	HL,DE
	LD	DE,LVLROOM
	ADD	HL,DE
	RET

GETROOM:CALL	ROOMADDR
	LD	A,(HL)
	CP	-1
	RET

SETROOM:PUSH	AF
	CALL	ROOMADDR
	POP	AF
	LD	(HL),A
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = POSITION OF ROOM
;OUTPUT:HL = ADRESS OF ROOM MAP

	CSEG
	EXTRN	MULTDEA

ROOM2MAP:
	CALL	GETROOM
	LD	DE,MAPSIZ
	CALL	MULTDEA
	LD	DE,LVLMAP
	ADD	HL,DE
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = POSITION OF ROOM
;OUTPUT:HL = ADDRESS OF ROOM HEIGTH

	CSEG
	EXTRN	MULTDEA

ROOM2HGT:
	CALL	GETROOM
	LD	DE,HEIGTHSIZ
	CALL	MULTDEA
	LD	DE,LVLHGT
	ADD	HL,DE
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = POSITION OF ROOM

	CSEG
	EXTRN	EDMAPPER,EDHEIGTH,VDPSYNC

EDITROOM:
	LD	(E.ROOM),DE
	CALL	GETROOM			;RETURN IF ROOM = -1
	RET	Z

	LD	DE,(E.ROOM)
	CALL	ROOM2MAP		;TAKE THE MAP ADDRESS
	EX	DE,HL
	CALL	EDMAPPER		;AND EDIT IT

	LD	DE,(E.ROOM)
	CALL	ROOM2HGT		;TAKE THE HEIGTH ADDRESS
	EX	DE,HL
	CALL	EDHEIGTH		;AND EDIT IT

	CALL	LEVELSCR		;REPAINT LEVEL EDITOR SCREEN
	CALL	DRAWLEVEL		;DRAW THE LEVEL
	CALL	VDPSYNC			;WAIT TO THE VDP
	RET	

	DSEG
E.ROOM:	DW	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;OUTPUT: A = NUMBER OF NEW ROOM, OR -1 WHEN NO MORE FREE ROOMS

	CSEG
	PUBLIC	NEWROOM

NEWROOM:XOR	A
	LD	B,NR_ROOMS

N.LOOP:	PUSH	BC
	LD	BC,LVLROOMSIZ
	LD	HL,LVLROOM
	CPIR
	JP	PO,N.FOUND
	INC	A
	POP	BC
	DJNZ	N.LOOP
	LD	DE,NEW.ERR
	CALL	ERROR
	LD	A,-1
	JR	N.RET

N.FOUND:POP	BC
N.RET:	CP	-1
	RET

NEW.ERR:"NO MORE FREE ROOMS",0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	KPRESS,PUTSPRITE,KEY2DIR,MOVEUC,PRINTF,VDPSYNC

SELROOM:LD	DE,0
	JR	R.PRINT			;PRINT MAP NUMBER OF 0,0

R.LOOP:	LD	DE,(R.ROOM)
	CALL	ROOM2XY
	EX	DE,HL
	LD	C,MAPSPR
	LD	B,MAPPAT
	CALL	PUTSPRITE		;MARK THE MAP
	CALL	KPRESS

	CP	KB_ESC			;ESC ENDS WITH THE LEVEL EDITION
	RET	Z

	LD	DE,(R.ROOM)
	CP	KB_SPACE		;SPACE EDITS THE ROOM
	JR	NZ,R.DEL
	CALL	EDITROOM
	LD	DE,(R.ROOM)
	JR	R.PRINT

R.DEL:	CP	KB_DEL			;DELETE REMOVES THE ROOM
	JR	NZ,R.INS
	LD	A,-1
	JR	R.MOD			;WRITE -1 IN THIS ROOM

R.INS:	CP	KB_INS			;INSERT ADDS NEW ROOM
	JR	NZ,R.DIR
	CALL	GETROOM			;CHECK IF THE ROOM IS ALREADY DEFINED
	JR	NZ,R.LOOP
	LD	DE,(R.ROOM)
	CALL	NEWROOM			;GET FREE ROOM NUMBER
	JR	Z,R.LOOP		;(NO MORE FREE ROOMS)
R.MOD:	LD	DE,(R.ROOM)
	PUSH	DE
	PUSH	DE
	CALL	SETROOM			;ASSIGN THE ROOM NUMBER
	POP	DE
	CALL	DRAWROOM		;COLORIZE THE ROOM
	POP	DE
	JR	R.PRINT			;UPDATE THE SCREEN


R.DIR:	CALL	KEY2DIR
	JR	C,R.LOOP
	LD	DE,(R.ROOM)
	CALL	MOVEUC

	LD	A,-1			;CHECK LIMITS
	CP	D
	JR	Z,R.LOOP
	CP	E
	JR	Z,R.LOOP
	LD	A,(LVLXSIZ)
	CP	D
	JR	Z,R.LOOP
	LD	A,(LVLYSIZ)
	CP	E
	JR	Z,R.LOOP

R.PRINT:LD	(R.ROOM),DE
	CALL	GETROOM
	LD	E,A
	PUSH	DE			;PUSH THE ROOM NUMBER
	LD	DE,TEXTCOORD
	CALL	LOCATE
	LD	DE,R.FMT		;PRINT THE ROOM NUMBER
	CALL	PRINTF
	CALL	VDPSYNC
	JP	R.LOOP

R.FMT:	DB	"ROOM: %0d",0

	DSEG
R.ROOM:	DW	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	DELSPR,LEVEL,PUTSPRITE,KPRESS,MOVEUC,KEY2DIR

SELLEVEL:
	LD	A,(E.LEVEL)
	CALL	LEVEL
	LD	A,(E.LEVEL)
	LD	DE,LISTCOORD
	ADD	A,E
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	E,A
	LD	D,4*15			;2*TAB-1
	LD	BC,PTRPAT*256 + PTRSPR
	CALL	PUTSPRITE
	CALL	KPRESS

	CP	KB_ESC			;ESC EXITS FROM EDITOR
	CALL	Z,EXIT

L.SPACE:CP	KB_SPACE		;SPACE SELECTS THE LEVEL
	JR	NZ,L.DIR
	CALL	DRAWLEVEL		;DRAW THE LEVEL
	CALL	VDPSYNC			;WAIT TO THE VDP
	RET

L.DIR:	CALL	KEY2DIR
	JR	C,SELLEVEL
	LD	DE,(E.LEVEL)
	CALL	MOVEUC

	LD	A,E			;CHECK LIMITS
	CP	-1
	JR	Z,SELLEVEL
	CP	NR_LEVELS
	JR	Z,SELLEVEL
	LD	(E.LEVEL),A
	JP	SELLEVEL

	DSEG

E.LEVEL:	DB	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	LEVEL,LINE

DRAWLEVEL:
	LD	A,(E.LEVEL)
	CALL	LEVEL
	LD	A,LOGIMP
	LD	(LOGOP),A

	LD	A,LVLCOLOR
	LD	(FORCLR),A
	LD	DE,MAPCOORD
	LD	A,(LVLYSIZ)
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,E
	LD	C,A
	LD	B,D
	LD	HL,0800H
	LD	A,(LVLXSIZ)
	INC	A
	CALL	GLINES			;DRAW VERTICAL LINES
	
	LD	DE,MAPCOORD
	LD	A,(LVLXSIZ)
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,D
	LD	B,A
	LD	C,E
	LD	HL,0008H
	LD	A,(LVLYSIZ)
	INC	A
	CALL	GLINES			;DRAW HORIZONTAL LINES

	LD	A,LOGIMP
	LD	(LOGOP),A
	LD	A,(LVLXSIZ)
	LD	B,A
	LD	A,(LVLYSIZ)
	LD	C,A
	LD	DE,0

D.Y:	PUSH	BC			;LOOP OVER Y
	PUSH	DE

D.X:	PUSH	BC			;LOOP OVER X
	PUSH	DE
	CALL	DRAWROOM
	POP	DE			;NEXT X ITERATION
	INC	D
	POP	BC
	DJNZ	D.X

	POP	DE			;NEXT Y ITERATION
	INC	E
	POP	BC
	DEC	C
	JR	NZ,D.Y

	RET


GLINES:	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	LINE
	POP	HL

	POP	DE			;INCREMENT ORIGIN POINT
	LD	A,D
	ADD	A,H
	LD	D,A
	LD	A,E
	ADD	A,L
	LD	E,A

	POP	BC			;INCREMENT DESTINE POINT
	LD	A,B
	ADD	A,H
	LD	B,A
	LD	A,C
	ADD	A,L
	LD	C,A

	POP	AF
	DEC	A
	JR	NZ,GLINES
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = ROOM LOCATION

	CSEG
	EXTRN	LMMV

DRAWROOM:
	PUSH	DE
	CALL	GETROOM			;TAKE THE COLOR OF THIS ROOM
	JR	Z,D.NOMAP
	LD	A,MAPCOLOR
	JR	D.SET
D.NOMAP:LD	A,MAPNOCOLOR
D.SET:	LD	(FORCLR),A
	POP	DE

	CALL	ROOM2XY
	EX	DE,HL
	INC	D
	INC	E
	LD	BC,0707H
	JP	LMMV			;PAINT THE RECTANGLE


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	SPRITE,SETCOLSPR,DELSPR
	

INITSPRITES:
	CALL	DELSPR
	LD	BC,2*256 + PTRPAT
	LD	DE,ED.SPRITES
	JP	SPRITE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	LEVEL,LOCATE,PRINTF
	EXTRN	DISSPR,ENASPR,DISSCR,ENASCR,CLRVPAGE,SETPAGE

LEVELSCR:
	CALL	DELSPR
	CALL	INITSPRITES		;INITIALIZE THE SPRITES
	LD	A,LEVPAGE
	LD	(ACPAGE),A
	LD	(DPPAGE),A
	CALL	SETPAGE			;SET THE CORRECT PAGE
	LD	E,LEVPAGE
	CALL	CLRVPAGE		;CLEAN THE PAGE

	LD	DE,LISTCOORD
	CALL	LOCATE
	XOR	A
	LD	(S.CONT),A

L.LOOP:	CALL	LEVEL			;PRINT ALL THE LEVEL NAMES
	LD	A,(LVLYSIZ)
	LD	L,A
	PUSH	HL
	LD	A,(LVLXSIZ)
	LD	L,A
	PUSH	HL
	LD	HL,LVLNAME
	PUSH	HL
	LD	DE,L.FMT
	CALL	PRINTF
	LD	HL,S.CONT
	LD	A,(HL)
	INC	A
	LD	(HL),A
	CP	NR_LEVELS
	JR	NZ,L.LOOP
	RET

L.FMT:	9,9,"%s (%dX%d)",10,0

	DSEG
S.CONT:	DB	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG

ED.SPRITES:
PTRGEN:	DB	080H,0C0H,0F0H,0F0H,0C0H,080H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H

MAPGEN:	DB	0FFH,081H,081H,081H,081H,081H,081H,0FFH
	DB	000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H



