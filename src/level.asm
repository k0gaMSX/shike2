
	INCLUDE	SHIKE2.INC
	INCLUDE	EDITOR.INC
	INCLUDE	GEOMETRY.INC
	INCLUDE	MOVABLE.INC

NR_RINFO	EQU	7		;4 DIRECTIONS,2 DIAGONALS AND CENTER

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	LEVELINIT
	EXTRN	BZERO

LEVELINIT:
	LD	A,-1			;IN THE BEGINNING WE ARE NOT
	LD	(LEVEL),A		;DISPLAYING ANY ROOM
	LD	L,A
	LD	H,A
	LD	(ROOM),HL

	LD	HL,RINFO
	LD	BC,RINFO.SIZ*6
	CALL	BZERO			;CLEAR ROOM MAPPING ARRAY

	LD	HL,0
	ADD	HL,SP
	LD	(I.STACK),HL
	LD	SP,I.RINFO
	LD	A,-1
	LD	B,NR_RINFO
	LD	IY,RINFO
	LD	DE,RINFO.SIZ		;INITIALIZE STATIC FIELDS IN RINFO

I.LOOP:	EXX
	POP	HL			;HL = X RENDER
	POP	DE			;DE = Y RENDER
	POP	BC			;BC = ROOM INCREMENT
	LD	(IY+RINFO.XR),L
	LD	(IY+RINFO.XR+1),H
	LD	(IY+RINFO.YR),E
	LD	(IY+RINFO.YR+1),D
	LD	(IY+RINFO.INC),C
	LD	(IY+RINFO.INC+1),B
	LD	(IY+RINFO.ROOM),A	;THIS RINFO IS NOT RENDERING ANY
	LD	(IY+RINFO.ROOM+1),A	;ROOM YET
	EXX
	ADD	IY,DE
	DJNZ	I.LOOP
	LD	HL,(I.STACK)
	LD	SP,HL
	RET

I.RINFO:DW	CENTRAL.P1X,CENTRAL.P1Y,        00000H	;CENTRAL
	DW	CENTRAL.P1X-80H,CENTRAL.P1Y-40H,0FF00H	;LEFT
	DW	CENTRAL.P1X+80H,CENTRAL.P1Y+40H,00100H	;RIGTH
	DW	CENTRAL.P1X+80H,CENTRAL.P1Y-40H,000FFH	;UP
	DW	CENTRAL.P1X-80H,CENTRAL.P1Y+40H,00001H	;DOWN
	DW	CENTRAL.P1X,CENTRAL.P1Y-80H,    0FFFFH	;LEFT UP
	DW	CENTRAL.P1X,CENTRAL.P1Y+80H,    00101H	;RIGTH DOWN

I.REND:

	DSEG
I.STACK:	DW	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = LOCATION OF THE MAP IN THE LEVEL
;OUTPUT:HL = ADRESS OF THE ROOM IN THE LEVEL

	CSEG
	PUBLIC	ROOMADDR
	EXTRN	MULTEA

ROOMADDR:
	PUSH	DE
	LD	D,0
	LD	A,(LVLYSIZ)
	CALL	MULTEA
	POP	DE			;HL = Y*LVLYSIZ
	LD	E,D
	LD	D,0
	ADD	HL,DE			;HL = Y*LVLYSIZ + X
	LD	DE,LVLROOM
	ADD	HL,DE			;HL = LVLROOM + Y*LVLYSIZ + X
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = LOCATION OF THE MAP IN THE LEVEL
;OUTPUT:A = ACCESS BYTE

	CSEG
	PUBLIC	GETACC

GETACC:	CALL	ACCADDR
	LD	A,(HL)
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = LOCATION OF THE MAP IN THE LEVEL
;OUTPUT:HL = ADRESS OF THE ACCESS BYTE

	CSEG
	PUBLIC	ACCADDR

ACCADDR:CALL	ROOMADDR
	LD	DE,LVLACC-LVLROOM	;ROOM MATRIX AND ACCESS MATRIX
	ADD	HL,DE			;HAVE THE SAME SIZE AND THEY
	RET				;ARE CONTIGUOUS

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = POSITION OF THE ROOM
;OUTPUT:A = ROOM NUMBER
;	Z = 1 WHEN ROOM IS NOT DEFINED

	CSEG
	PUBLIC	GETROOM

GETROOM:LD	A,-1			;ROOM = -1,-1 IS MARK OF INVALID ROOM
	CP	D
	JR	NZ,G.1
	CP	E
	JR	NZ,G.1
	LD	A,-1
	JR	G.RET

G.1:	CALL	ROOMADDR
	LD	A,(HL)
G.RET:	CP	-1
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = POSITION OF ROOM
;OUTPUT:HL = ADRESS OF ROOM MAP
;	Z = 1 WHEN ROOM IS NOT DEFINED

	CSEG
	PUBLIC	ROOM2MAP
	EXTRN	MULTDEA

ROOM2MAP:
	CALL	GETROOM
	LD	HL,0
	RET	Z
	LD	DE,MAPSIZ
	CALL	MULTDEA				;HL = ROOM*MAPSIZ
	LD	DE,LVLMAP
	ADD	HL,DE				;HL = ROOM*MAPSIZ+LVLMAP
	OR	1				;SET Z=0 FLAG
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = POSITION OF ROOM
;OUTPUT:HL = ADDRESS OF ROOM HEIGTH
;	Z = 1 WHEN ROOM IS NOT DEFINED

	CSEG
	PUBLIC	ROOM2HGT
	EXTRN	MULTDEA

ROOM2HGT:
	CALL	GETROOM
	LD	HL,0
	RET	Z
	LD	DE,HEIGTHSIZ
	CALL	MULTDEA				;HL = ROOM*HEIGTHSIZ
	LD	DE,LVLHGT
	ADD	HL,DE				;HL = ROOM*HEIGTHSIZ+LVLHGT
	OR	1				;SET Z=0 FLAG
	RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: A = NUMBER OF LEVEL


	CSEG
	PUBLIC	PUTLEVEL

PUTLEVEL:
	ADD	A,7
	OUT	(0FDH),A
	RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = ROOM LOCATION
;	C = LEVEL
;OUTPUT:HL = ROOM DATA WHEN IT IS VISIBLE, 0 IN OTHER CASE
;	Z = 1 WHEN IT IS NOT VISIBLE

	CSEG
	PUBLIC	GETRINFO
	EXTRN	ADDAHL

GETRINFO:
	LD	A,(LEVEL)
	CP	C
	JR	NZ,G.NOK		;DIFFERENT LEVEL, SO NO HEIGTH

	LD	IY,RINFO
	LD	B,NR_RINFO

R.LOOP:	LD	A,E			;IS IT THE SAME ROOM?
	CP	(IY+RINFO.ROOM)
	JR	NZ,R.NEXT
	LD	A,D
	CP	(IY+RINFO.ROOM+1)
	JR	NZ,R.NEXT
	PUSH	IY			;OK, RETURN IT
	POP	HL
	OR	1			;SET Z=0
	RET

R.NEXT:	EXX
	LD	DE,RINFO.SIZ
	ADD	IY,DE
	EXX
	DJNZ	R.LOOP

G.NOK:	LD	HL,0			;I'M SORRY, YOU ARE NOT SHOWED
	CP	A			;SET Z=1
	RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = ROOM LOCATION
;OUTPUT:Z = 1 WHEN DE IS NOT CORRECT

	CSEG

CHKROOM:LD	A,-1			;CHECK IF THE ROOM LOCATION IS CORRECT
	CP	D
	RET	Z
	CP	E
	RET	Z
	LD	A,(LVLYSIZ)
	CP	E
	RET	Z
	LD	A,(LVLXSIZ)
	CP	D
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	C = LEVEL
;	DE = ROOM LOCATION

	CSEG
	PUBLIC	MOVECAMARA
	EXTRN	MEMSET,HMATRIX,PTRDE,DBGSCR

MOVECAMARA:
	LD	A,C
	LD	(LEVEL),A
	LD	(ROOM),DE
	CALL	PUTLEVEL
	CALL	ROOM2MAP

	PUSH	HL
	LD	DE,(ROOM)
	CALL	ROOM2HGT
	LD	C,L
	LD	B,H			;BC = HEIGTH BUFFER
	POP	DE			;DE = MAP BUFFER
	CALL	DBGSCR

	LD	IY,RINFO
	LD	B,NR_RINFO

M.LOOP:	PUSH	BC
	PUSH	IY
	LD	E,IYL
	LD	D,IYU
	LD	HL,RINFO.HMATRIX
	ADD	HL,DE			;HL = DESTINATION MATRIX
	LD	(M.PTR),HL

	LD	DE,(ROOM)
	LD	L,(IY+RINFO.INC)
	LD	H,(IY+RINFO.INC+1)	;HL=ROOM INCREMENTS
	LD	A,E
	ADD	A,L
	LD	E,A
	LD	A,D
	ADD	A,H
	LD	D,A
	CALL	CHKROOM
	LD	(IY+RINFO.ROOM),E	;DE = NEW ROOM LOCATION
	LD	(IY+RINFO.ROOM+1),D
	JR	Z,M.BAD			;IF DE IS NOT VALID ROOM,GOTO BAD
	CALL	ROOM2HGT
	JR	Z,M.BAD			;IF DE IS A NOT DEFINED ROOM,GOTO BAD

	EX	DE,HL			;DE = HEIGTH DEFINITION
	LD	BC,(M.PTR)		;BC = HEIGTH DESTINE BUFFER
	CALL	HMATRIX
	JR	M.NEXT

M.BAD:	LD	HL,(M.PTR)
	LD	BC,HMATRIX.SIZ		;IT IS A NON DEFINED ROOM
	LD	A,0FFH			;SET HEIGTH FF BECAUSE IT HELPS
	CALL	MEMSET			;TO AVOID ENTER THERE

M.NEXT:	POP	IY
	LD	DE,RINFO.SIZ
	ADD	IY,DE			;IY POINTING TO NEXT RINFO
	POP	BC
	DJNZ	M.LOOP
	RET

	DSEG
M.PTR:	DW	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	DSEG
	PUBLIC	HGTHMATRIX
LEVEL:		DB	0
ROOM:		DW	0
RINFO:		DS	RINFO.SIZ*NR_RINFO
HGTHMATRIX	EQU	RINFO+RINFO.HMATRIX


