

;A MOB (MOVABLE OBJECT BLOCK) IS EQUIVALENT TO SOFTWARE SPRITES

MOB.NEXT	EQU	0		;NEXT DRAWABLE MOB
MOB.PREV	EQU	MOB.NEXT+2	;PREVIOUS DRAWABLE MOB

MOB.YD		EQU	MOB.PREV+2	;Y COORDENATE IN DISPLAY PAGE
MOB.XD		EQU	MOB.YD+1	;X COORDENATE IN DISPLAY PAGE
MOB.YDSIZ	EQU	MOB.XD+1	;Y SIZE IN DISPLAY PAGE
MOB.XDSIZ	EQU	MOB.YDSIZ+1	;X SIZE IN DISPLAY PAGE

MOB.YE		EQU	MOB.XDSIZ+1	;Y COORDENATE IN ACTIVE PAGE
MOB.XE		EQU	MOB.YE+1	;X COORDENATE IN ACTIVE PAGE
MOB.YESIZ	EQU	MOB.XE+1	;Y SIZE IN ACTIVE PAGE
MOB.XESIZ	EQU	MOB.YESIZ+1	;X SIZE IN ACTIVE PAGE

MOB.Y		EQU	MOB.XESIZ+1	;Y COORDENATE IN PUTMOB
MOB.X		EQU	MOB.Y+1		;X COORDENATE IN PUTMOB
MOB.YSIZ	EQU	MOB.X+1		;Y SIZE IN PUTMOB
MOB.XSIZ	EQU	MOB.YSIZ+1	;X SIZE IN PUTMOB

MOB.YO		EQU	MOB.XSIZ+1	;Y COORDENATE OF THE GRAPHIC ORIGIN
MOB.XO		EQU	MOB.YO+1	;X COORDENATE OF THE GRAPHIC ORIGIN

MOB.YB		EQU	MOB.XO+1	;X COORDENATE OF BACKGROUND
MOB.XB		EQU	MOB.YB+1	;Y COORDENATE OF BACKGROUND

MOB.BASE	EQU	MOB.XB+1	;BASE COORDENATE
MOB.Z		EQU	MOB.BASE+2	;Z VALUE OF THE MOB

SIZMOB		EQU	MOB.Z+1


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;A POINT REPRESENT A SPACE LOCATION IN OUR GAME

POINT.LEVEL	EQU	0		;LEVEL COORDENATE
POINT.ROOM	EQU	POINT.LEVEL+2	;ROOM COORDENATE
POINT.Y		EQU	POINT.ROOM+2	;Y COORDENATE
POINT.X		EQU	POINT.Y+1	;X COORDENATE
POINT.Z		EQU	POINT.X+1	;Z COORDENATE
SIZPOINT	EQU	POINT.Z+1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;DIFFERENT DIRECTIONS

DRIGHT		EQU	0
DDOWN		EQU	1
DUP		EQU	2
DLEFT		EQU	3
DNODIR		EQU	4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;A MOV IS A GAME ENTITY WHICH CAN BE MOVED

MOV.MOB		EQU	0			;MOB INFORMATION (GRAP. INFO)
MOV.NEXT	EQU	MOV.MOB+SIZMOB		;NEXT MOVABLE
MOV.PREV	EQU	MOV.NEXT+2		;PREVIOUS MOVABLE
MOV.ANEXT	EQU	MOV.PREV+2		;NEXT ANIMATED MOVABLE
MOV.APREV	EQU	MOV.ANEXT+2		;PREV ANIMATED MOBABLE
MOV.POINT	EQU	MOV.APREV+2		;CHARACTER LOCATION
MOV.DPOINT	EQU	MOV.POINT+SIZPOINT	;MOVEMENT DESTINATION
MOV.ZSIZ	EQU	MOV.DPOINT+SIZPOINT	;Z SIZE OF THE MOVABLE
MOV.RINFO	EQU	MOV.ZSIZ+1		;INFO ABOUT THE ROOM OF POINT
MOV.YR		EQU	MOV.RINFO+2		;Y RENDER COORDENATE
MOV.XR		EQU	MOV.YR+2		;X RENDER COORDENATE
MOV.DIR		EQU	MOV.XR+2		;DIRECTION OF THE CHARACTER
MOV.STEPCNT	EQU	MOV.DIR+1		;COUNTER USED FOR ANIMATIONS
MOV.PAT		EQU	MOV.STEPCNT+1		;PATTERN OF THE CHARACTER
MOV.CALLBACK	EQU	MOV.PAT+1		;CALLBACK FUNCTION
SIZMOV		EQU	MOV.CALLBACK+2


MOV.LEVEL	EQU	MOV.POINT+POINT.LEVEL
MOV.ROOM	EQU	MOV.POINT+POINT.ROOM
MOV.Y		EQU	MOV.POINT+POINT.Y
MOV.X		EQU	MOV.POINT+POINT.X
MOV.Z		EQU	MOV.POINT+POINT.Z

MOV.DLEVEL	EQU	MOV.DPOINT+POINT.LEVEL
MOV.DROOM	EQU	MOV.DPOINT+POINT.ROOM
MOV.DY		EQU	MOV.DPOINT+POINT.Y
MOV.DX		EQU	MOV.DPOINT+POINT.X
MOV.DZ		EQU	MOV.DPOINT+POINT.Z

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;A CHAR IS A MOVABLE WHICH HAVE A IA
SIZPATH		EQU	10

CHAR.MOV	EQU	0			;MOVABLE INFORMATION
CHAR.NEXT	EQU	CHAR.MOV+SIZMOV		;NEXT CHARACTER
CHAR.PREV	EQU	CHAR.NEXT+2		;PREVIOUS CHARACTER
CHAR.CONTROL	EQU	CHAR.PREV+2		;CONTROLLER FUNCTION
CHAR.PAT	EQU	CHAR.CONTROL+2		;CHARACTER PATTERN
CHAR.PATH	EQU	CHAR.PAT+1		;BUFFER FOR PATH SEARCH
CHAR.ARG1	EQU	CHAR.PATH+SIZPATH	;CHARACTER ARG1
CHAR.ARG2	EQU	CHAR.ARG1+1		;CHARACTER ARG2
CHAR.ARG3	EQU	CHAR.ARG2+1		;CHARACTER ARG3
SIZCHAR		EQU	CHAR.ARG3+1

CHARCTL.FUN	EQU	0			;POINTER TO FUNCTION
CHARCTL.STR	EQU	CHARCTL.FUN+2		;POINTER TO STRING
CHARCTL.CODE	EQU	CHARCTL.STR+2		;CODE OF THE CHARCTL
SIZCHARCTL	EQU	CHARCTL.CODE+1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DOOR.MOB1	EQU	0			;FIRST MOB
DOOR.MOB2	EQU	DOOR.MOB1+SIZMOB	;SECOND MOB
DOOR.POINT	EQU	DOOR.MOB2+SIZMOB	;LOCATION OF THE DOOR
DOOR.OPEN	EQU	DOOR.POINT+SIZPOINT	;IS IT OPENED?
DOOR.TYPE	EQU	DOOR.OPEN+1		;VERTICAL OR HORIZONTAL?
DOOR.KEY	EQU	DOOR.TYPE+1		;WHAT KEY OPEN THIS DOOR
SIZDOOR		EQU	DOOR.KEY+1

DOOR.LEVEL	EQU	DOOR.POINT + POINT.LEVEL
DOOR.ROOM	EQU	DOOR.POINT + POINT.ROOM
DOOR.X		EQU	DOOR.POINT + POINT.X
DOOR.Y		EQU	DOOR.POINT + POINT.Y
DOOR.Z		EQU	DOOR.POINT + POINT.Z

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

OBJECT.MOV	EQU	0			;MOVABLE PART
OBJECT.ID	EQU	OBJECT.MOV+SIZMOV	;OBJECT ID
OBJECT.OWNER	EQU	OBJECT.ID+1		;CHARACTER OWNER ID
OBJECT.NEXT	EQU	OBJECT.OWNER+1		;LINKED LIST FOR CONTAINERS
OBJECT.PREV	EQU	OBJECT.NEXT+2
SIZOBJECT	EQU	OBJECT.PREV+2


