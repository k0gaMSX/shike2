	INCLUDE	SHIKE2.INC
	INCLUDE	BIOS.INC


TILE_SPRITE	EQU	0
TILE_PATTERN	EQU	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	MAIN
	EXTRN	BZERO,SETISR,SPRITE,COLORSPRITE,CHKMSX,INITVDP
MAIN:

	.PHASE	100H
.RELOC:
	LD	HL,.RELOC
        LD	DE,CODESEG
	LD	BC,CODESIZ
	LDIR
	JP	.CONT
        .DEPHASE

.CONT:
	LD	HL,DATASEG
	LD	BC,DATASIZ
	CALL	BZERO		;CLEAR THE DATA SEGMENT

	CALL	CHKMSX
	RET	Z		;THIS MSX HAS SOME PROBLEM FOR US

	CALL	INITVDP
	CALL	SETISR		;SET GAME ISR
	LD	C,TILE_PATTERN
	LD	DE,TILEMARK
	CALL	SPRITE		;TEMPORAL CALL

	LD	C,TILE_SPRITE
	LD	DE,TILECOL
	CALL	COLORSPRITE	;TEMPORAL CALL

	CALL	GRID
	CALL	TILEMOV
	;CONTINUE IN EXIT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	EXIT
	EXTRN	RESISR,MSXTERM

EXIT:
	CALL	RESISR		;RESTORE SYSTEM ISR
	EI
	XOR	A
	CALL	CHGMOD
	JP	MSXTERM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;		(ACPAGE) = PAGE
;		(FRGCLR) = FOREGROUND COLOR
	CSEG
	PUBLIC	GRID
	EXTRN	LINE,VDPSYNC

GRID:
	LD	IY,.GDATA

.GNEXT:	LD	D,(IY+0)		;LOAD NEXT LINE
	LD	E,(IY+1)
	LD	B,(IY+2)
	LD	C,(IY+3)

.GLINE:	PUSH	IY			;PAINT THE LINE
	PUSH	BC
	PUSH	DE
	CALL	LINE
	POP	DE
	POP	BC
	POP	IY

	LD	A,D			;CHECK IF WE HAVE TO PASS TO
	CP	(IY+4)			;NEXT ELEMENT OF THE TABLE
	JR	NZ,.GINC
	LD	A,E
	CP	(IY+5)
	JR	NZ,.GINC
	LD	A,B
	CP	(IY+6)
	JR	NZ,.GINC
	LD	A,C
	CP	(IY+7)
	JR	NZ,.GINC

	LD	DE,12			;PASS TO NEXT ELEMENT OF THE TABLE
	ADD	IY,DE
	LD	HL,.GDATAEND
	LD	E,IYL
	LD	D,IYU
	OR	A
	SBC	HL,DE
	JR	NZ,.GNEXT		;IS IT THE END?
	CALL	VDPSYNC			;IT IS THE END, WAIT TO THE VDP
	RET

.GINC:	LD	A,D			;USE THE INCREMENTS OF THE TABLE
	ADD	A,(IY+8)		;AND GET NEXT LINE
	LD	D,A
	LD	A,E
	ADD	A,(IY+9)
	LD	E,A
	LD	A,B
	ADD	A,(IY+10)
	LD	B,A
	LD	A,C
	ADD	A,(IY+11)
	LD	C,A
	JR	.GLINE


;	FROM   - X0   Y0  X1  Y1  - TO X2  Y2    X3  Y3   IX0 IY0 IX1 IY1
.GDATA:	DB	  0,  4,  255,131,      0, 84,  255,211,    0, 8,  0, 8
	DB	239,211,    0, 92,     15,211,    0,204,  -16, 0,  0, 8
	DB	  8,  0,  255,123,    248,  0,  255,  3,   16, 0,  0,-8
	DB	  0,  3,    7,  0,      0,123,  247,  0,    0, 8, 16, 0
	DB	  0,131,  255,  4,      0,211,  255, 84,    0, 8,  0, 8
	DB	 16,211,  255, 92,    240,211,  255,204,   16, 0,  0, 8
.GDATAEND:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CSEG
	EXTRN	GETCHAR,PUTSPRITE

TILEMOV:
	LD	DE,0FFH

.MOVLOOP:
	PUSH	DE
	LD	C,TILE_SPRITE
	LD	B,TILE_PATTERN
	CALL	PUTSPRITE
	CALL	GETCHAR
	POP	DE
        LD	BC,0

	CP	KB_ESC
	RET	Z
.UP:
	CP	KB_UP
	JR	NZ,.DOWN
	LD	C,-8
	JR	.DONE
.DOWN:
	CP	KB_DOWN
	JR	NZ,.LEFT
	LD	C,8
	JR	.DONE
.LEFT:
	CP	KB_LEFT
	JR	NZ,.RIGTH
	LD	B,-16
	JR	.DONE
.RIGTH:
	CP	KB_RIGTH
	JR	NZ,.MOVLOOP
	LD	B,16

.DONE:
	LD	A,E
	ADD	A,C
	LD	E,A
	LD	A,D
	ADD	A,B
	LD	D,A
	JR	.MOVLOOP


TILEMARK:
	DB	003H,00CH,030H,0C0H,0C0H,030H,00CH,003H
	DB	000H,000H,000H,000H,000H,000H,000H,000H
	DB	0C0H,030H,00CH,003H,003H,00CH,030H,0C0H
	DB	000H,000H,000H,000H,000H,000H,000H,000H

TILECOL:
	DB	0CH,0CH,0CH,0CH,0CH,0CH,0CH,0CH
	DB	0CH,0CH,0CH,0CH,0CH,0CH,0CH,0CH


