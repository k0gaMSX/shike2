	INCLUDE	SHIKE2.INC
	INCLUDE	BIOS.INC


TILE_SPRITE	EQU	0
TILE_PATTERN	EQU	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	MAIN
	EXTRN	BZERO,SETISR,SPRITE,COLORSPRITE,CHKMSX,INITVDP
MAIN:

	.PHASE	100H
.RELOC:
	LD	HL,.RELOC
        LD	DE,CODESEG
	LD	BC,CODESIZ
	LDIR
	JP	.CONT
        .DEPHASE

.CONT:
	LD	HL,DATASEG
	LD	BC,DATASIZ
	CALL	BZERO		;CLEAR THE DATA SEGMENT

	CALL	CHKMSX
	RET	Z		;THIS MSX HAS SOME PROBLEM FOR US

	CALL	INITVDP
	CALL	SETISR		;SET GAME ISR
	LD	C,TILE_PATTERN
	LD	DE,TILEMARK
	CALL	SPRITE		;TEMPORAL CALL

	LD	C,TILE_SPRITE
	LD	DE,TILECOL
	CALL	COLORSPRITE	;TEMPORAL CALL

	CALL	TILEMOV
	;CONTINUE IN EXIT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	EXIT
	EXTRN	RESISR,MSXTERM

EXIT:
	CALL	RESISR		;RESTORE SYSTEM ISR
	EI
	XOR	A
	CALL	CHGMOD
	JP	MSXTERM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	GETCHAR,PUTSPRITE

TILEMOV:
	LD	DE,0FFH

.MOVLOOP:
	PUSH	DE
	LD	C,TILE_SPRITE
	LD	B,TILE_PATTERN
	CALL	PUTSPRITE
	CALL	GETCHAR
	POP	DE
        LD	BC,0

	CP	KB_ESC
	RET	Z
.UP:
	CP	KB_UP
	JR	NZ,.DOWN
	LD	C,-8
	JR	.DONE
.DOWN:
	CP	KB_DOWN
	JR	NZ,.LEFT
	LD	C,8
	JR	.DONE
.LEFT:
	CP	KB_LEFT
	JR	NZ,.RIGTH
	LD	B,-16
	JR	.DONE
.RIGTH:
	CP	KB_RIGTH
	JR	NZ,.MOVLOOP
	LD	B,16

.DONE:
	LD	A,E
	ADD	A,C
	LD	E,A
	LD	A,D
	ADD	A,B
	LD	D,A
	JR	.MOVLOOP


TILEMARK:
	DB	003H,00CH,030H,0C0H,0C0H,030H,00CH,003H
	DB	000H,000H,000H,000H,000H,000H,000H,000H
	DB	0C0H,030H,00CH,003H,003H,00CH,030H,0C0H
	DB	000H,000H,000H,000H,000H,000H,000H,000H

TILECOL:
	DB	0CH,0CH,0CH,0CH,0CH,0CH,0CH,0CH
	DB	0CH,0CH,0CH,0CH,0CH,0CH,0CH,0CH


