	INCLUDE	KBD.INC
	INCLUDE GEOMETRY.INC

NR_CHARS	EQU	8		;NUMBER OF CHARACTERS IN THE FULL GAME

MAXX		EQU	16
MAXY		EQU	16

;CHARACTER COORDENATES HAVE THE FORM (MAP,SCR,X,Y)

CHAR.MAP	EQU	0		;MAP POSITION. -1 MEANS IT IS FREE
CHAR.SCR	EQU	1		;SCREEN POSITION
CHAR.Y		EQU	2		;Y COORDENATE
CHAR.X		EQU	3		;X COORDENATE
CHAR.YR		EQU	4		;Y RENDER COORDENATE
CHAR.XR		EQU	6		;X RENDER COORDENATE
CHAR.DIR	EQU	8		;ACTUAL DIR
CHAR.DIRCNT	EQU	9		;COUNTER USED FOR ANIMATIONS
CHAR.KEY	EQU	10		;LAST KEY, USED IN KBCONTROL
CHAR.CONTROL	EQU	11		;CONTROLLER FOR THE CHARACTER
CHAR.SIZ	EQU	13

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	HL = FUNCTION POINTER

	CSEG
	EXTRN	PTRCALL

FOREACH:LD	IX,BUFFER
	LD	B,NR_CHARS

F.LOOP:	PUSH	BC
	PUSH	HL
	CALL	PTRCALL
	POP	HL
	POP	BC

	LD	DE,CHAR.SIZ
	ADD	IX,DE
	DJNZ	F.LOOP
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	INITCHAR
	EXTRN	BZERO

INITCHAR:
	LD	HL,BUFFER
	LD	BC,CHAR.SIZ*NR_CHARS
	CALL	BZERO
	LD	HL,I.INIT
	CALL	FOREACH
	LD	HL,KBCONTROL
	JP	NEWCHAR

I.INIT:	LD	(IX+CHAR.DIR),D.NODIR
	LD	(IX+CHAR.MAP),-1
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = CONTROLLER FUNCTION

	CSEG
	PUBLIC	NEWCHAR

NEWCHAR:LD	IX,BUFFER
	LD	B,NR_CHARS
	LD	A,-1
	EX	DE,HL

N.LOOP:	CP	(IX+CHAR.MAP)
	JR	Z,N.FOUND
	LD	DE,CHAR.SIZ
	ADD	IX,DE
	DJNZ	N.LOOP
	LD	HL,0
	RET				;TODO: HANDLE OVERRUN

N.FOUND:LD	(IX+CHAR.MAP),0		;REMOVE FROM FREE LIST
	LD	(IX+CHAR.CONTROL),E
	LD	(IX+CHAR.CONTROL+1),D
	LD	L,IXL
	LD	H,IXU
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	CHARACTERS
	EXTRN	PTRCALL

CHARACTERS:
	LD	HL,C.CONTROL
	JP	FOREACH

C.CONTROL:
	LD	A,-1				;SKIP FREE CHARACTERS
	CP	(IX+CHAR.MAP)
	RET	Z

	LD	L,(IX+CHAR.CONTROL)		;JUMP TO THE CONTROLLER
	LD	H,(IX+CHAR.CONTROL+1)
	JP	PTRCALL


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	IX = POINTER TO THE CHARACTER

	CSEG
	EXTRN	GETCH,KEY2DIR,MOVEUC,WRLD2SCR,PUTMOB,EXIT,MOV16ISO

KBCONTROL:
	LD	A,(IX+CHAR.DIR)
	CP	D.NODIR
	JR	Z,K.GETCH
	DEC	(IX+CHAR.DIRCNT)
	JR	NZ,K.STEP

K.GETCH:CALL	GETCH
	JR	Z,K.MOVE
	LD	(K.KEY),A
	CP	KB_ESC
	CALL	Z,EXIT
	CP	(IX+CHAR.KEY)
	JP	Z,K.CANCEL
	CALL	KEY2DIR
	JR	C,K.MOVE
	LD	(IX+CHAR.DIR),A
	LD	A,(K.KEY)
	OR	80H
	LD	(IX+CHAR.KEY),A

K.MOVE:	LD	A,(IX+CHAR.DIR)
	CP	D.NODIR
	RET	Z
	LD	D,(IX+CHAR.X)
	LD	E,(IX+CHAR.Y)
	LD	(K.COORD),DE

	LD	A,(IX+CHAR.DIR)
	CALL	MOVEUC
	LD	A,-1
	CP	D
	JR	Z,K.CANCEL
	CP	E
	JR	Z,K.CANCEL

	LD	A,MAXX
	CP	D
	JR	Z,K.CANCEL
	LD	A,MAXY
	CP	E
	JR	Z,K.CANCEL

	LD	A,4
	LD	(IX+CHAR.DIRCNT),A
	LD	(IX+CHAR.X),D
	LD	(IX+CHAR.Y),E

	LD	DE,(K.COORD)
	LD	BC,7814H
	CALL	WRLD2SCR
	LD	(IX+CHAR.XR),L
	LD	(IX+CHAR.XR+1),H
	LD	(IX+CHAR.YR),E
	LD	(IX+CHAR.YR+1),D

K.STEP:	LD	A,(IX+CHAR.DIR)
	LD	L,(IX+CHAR.XR)
	LD	H,(IX+CHAR.XR+1)
	LD	E,(IX+CHAR.YR)
	LD	D,(IX+CHAR.YR+1)
	CALL	MOV16ISO
	LD	(IX+CHAR.XR),L
	LD	(IX+CHAR.XR+1),H
	LD	(IX+CHAR.YR),E
	LD	(IX+CHAR.YR+1),D
	LD	BC,0
	PUSH	IX
	CALL	PUTMOB
	POP	IX
	RET

K.CANCEL:
	LD	(IX+CHAR.DIR),D.NODIR
	RET

	DSEG
K.COORD:	DW	0
K.KEY:		DB	0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	DSEG
BUFFER:	DS	CHAR.SIZ * NR_CHARS
