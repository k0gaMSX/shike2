
	INCLUDE	BIOS.INC
	INCLUDE	SHIKE2.INC
	INCLUDE	EDITOR.INC
	INCLUDE	GEOMETRY.INC
	INCLUDE	KBD.INC
	INCLUDE	VDP.INC

MASKX		EQU	40H
NUMCOORD	EQU	00C8H

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	PUBLIC	EDHEIGTH
	EXTRN	HMATRIX,ED.SCREEN,HGTHBUF,HGTHMATRIX,VDPSYNC,EDINIT

EDHEIGTH:
	PUSH	DE
	CALL	EDINIT
	POP	DE
	CALL	NEWHEIGTH

	XOR	A
	LD	D,A
	LD	E,A
	LD	(H.TILE),DE
	LD	(H.ZVAL),A

	LD	HL,0
	ADD	HL,SP
	LD	(EDSTACK),HL		;SAVE SP FOR CANCEL OPERATIONS

	;MAIN EDITOR LOOP
EDLOOP: CALL	ED.SCREEN
	LD	BC,HGTHMATRIX
	LD	DE,HGTHBUF
	CALL	HMATRIX			;GENERATE THE HEIGTH MATRIX
	CALL	VDPSYNC			;WAIT TO THE VDP
	CALL	SELTILE			;SELECT BEGINING OF SQUARE
	CALL	SELREGION		;SELECT SIZE OF THE SQUARE
	CALL	SELZVAL			;SELECT Z VALUE
	CALL	ADDSQUARE		;ADD HEIGTH SQUARE
	JR	EDLOOP

	DSEG
H.TILE:		DW	0
H.ZVAL:		DB	0
H.SQRSIZ:	DW	0
EDSTACK:	DW	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	ED.SCREEN

CANCEL:	LD	HL,(EDSTACK)		;LONGJMP TO EDITOR LOOP. CANCEL
	LD	SP,HL			;ANY OPERATION
	JR	EDLOOP

EXIT:	LD	HL,(EDSTACK)		;LONGJMP FOR EXITING OF EDITOR.
	LD	SP,HL
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = INPUT TILE POSITION

	CSEG
	EXTRN	WRLD2SCR

TIL2SCR:
	LD	BC,CENTRAL.P1
	CALL	WRLD2SCR		;WE KNOW IT'LL RETURN POSITIVE NUMBERS
	LD	D,L			;AND SMALLER THAN 256
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = ACTUAL TILE SELECTED
;OUTPUT:HL = OUTPUT TILE

	CSEG
	EXTRN	MOVEUC,KEY2DIR,TILESPRITE,KPRESS

SELTILE:LD	DE,(H.TILE)
	CALL	TIL2SCR			;CALCULATE SCREEN COORDENATES OF TILE
	LD	C,0
	CALL	TILESPRITE
	CALL	ZVAL2SPR		;SHOW THE HEIGTH IN THIS TILE
	CALL	KPRESS

	CP	KB_ESC			;ESC EXITS FROM THE EDITOR
	CALL	Z,EXIT

	CP	KB_SPACE		;SPACE SELECTS THE TILE
	RET	Z

	CP	KB_DEL			;DEL DELETE LAST SQUARE
	JR	NZ,T.KEY
	CALL	DELSQUARE
	JR	SELTILE

T.KEY:	CALL	KEY2DIR
	JR	C,SELTILE
	LD	DE,(H.TILE)
	CALL	MOVEUC

	LD	A,-1			;CHECK LIMITS
	CP	D
	JR	Z,SELTILE
	CP	E
	JR	Z,SELTILE
	LD	A,MAXISOX
	CP	D
	JR	Z,SELTILE
	LD	A,MAXISOY
	CP	E
	JR	Z,SELTILE

	LD	(H.TILE),DE
	JR	SELTILE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: H.TILE = ACTUAL TILE SELECTED
;	H.ZVAL = ACTUAL Z VALUE SELECTED
;OUTPUT:H.ZVAL = OUTPUT Z VALUE

	CSEG
	EXTRN	NUM2SPR,VDPSYNC,KPRESS,KEY2DIR,MOVIEUC

SELZVAL:CALL	MARKREGION		;MARK REGION
	CALL	VDPSYNC

Z.LOOP:	LD	DE,(H.TILE)
	CALL	TIL2SCR			;CALCULATE SCREEN COORDENATES OF TILE
	LD	BC,(H.ZVAL)
	CALL	TILESPRITE
	LD	A,(H.ZVAL)
	LD	E,A
	LD	BC,NUMCOORD
	CALL	NUM2SPR			;SHOW ACTUAL VALUE OF H.ZVAL
	CALL	KPRESS			;WAIT NEXT KEYBOARD EVENT

	CP	KB_SPACE		;EXIT OF ZMODE PRESSING SPACE
	JR	NZ,Z.ESC
	CALL	MARKREGION		;UNMARK REGION
        RET

Z.ESC:	CP	KB_ESC			;ESC CANCEL OPERATION
	CALL	Z,CANCEL

	CALL	KEY2DIR
	JR	C,Z.LOOP
	LD	DE,(H.ZVAL)
	CALL	MOVIEUC			;INVERSE EUCLIDEAN MOVEMENT
	LD	A,E
	CP	-1
	JR	Z,Z.LOOP		;CHECK LIMITS
	CP	MAXHEIGTH
	JR	Z,Z.LOOP
	LD	(H.ZVAL),A
	JR	Z.LOOP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: (H.TILE) = LEFT-UPCORNER
;OUTPUT:(H.SQRSIZ) = SIZE OF THE REGION

	CSEG
	EXTRN	VDPSYNC,KPRESS,KEY2DIR,MOVEUC

SELREGION:
	LD	DE,0101H
	LD	(H.SQRSIZ),DE

R.LOOP:	CALL	MARKREGION		;MARK THE SQUARE REGION
	CALL	SQR2SPR			;SHOW THE HEIGTH BUFFER USAGE
	CALL	VDPSYNC			;WAIT TO THE VDP
	CALL	KPRESS			;WAIT A NEW KEY
	PUSH	AF
	CALL	MARKREGION		;UNMARK THE REGION
	POP	AF

	CP	KB_ESC			;ESC CANCEL OPERATION
	CALL	Z,CANCEL

	CP	KB_SPACE		;SPACE SELECTS THE ACTUAL SIZE
	JR	NZ,R.DIR
	CALL	VDPSYNC
	RET

R.DIR:	CALL	KEY2DIR
	JR	C,R.LOOP
	LD	DE,(H.SQRSIZ)
	CALL	MOVEUC			;EUCLIDEAN MOVEMENT

	XOR	A			;CHECK LIMITS
	CP	D
	JR	Z,R.LOOP
	CP	E
	JR	Z,R.LOOP
	LD	BC,(H.TILE)		;DON'T SELECT FAR AWAY OF MAXIMUM
	LD	A,D			;VALUES
	ADD	A,B
	CP	MAXISOX+1
	JR	Z,R.LOOP
	LD	A,E
	ADD	A,C
	CP	MAXISOY+1
	JR	Z,R.LOOP
	LD	(H.SQRSIZ),DE
	JR	R.LOOP


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	(SQR.BUF) = POINTER TO BUFFER BEGINNING

	CSEG
	PUBLIC	SHOWHEIGTHS
	EXTRN	H.DECRUNCH

SHOWHEIGTHS:
	LD	HL,(SQR.BUF)
	LD	A,L
	OR	H
	RET	Z			;NO HEIGTH BUFFER YET
	LD	A,(HL)
	OR	A
	RET	Z

	INC	HL
	LD	B,A
S.LOOP:	PUSH	BC
	CALL	H.DECRUNCH
	PUSH	HL
	CALL	DRAWSQUARE
	POP	HL
	POP	BC
	DJNZ	S.LOOP
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = LEFT-UP CORNER OF THE SQUARE
;	BC = SIZE OF THE SQUARE

	CSEG
	EXTRN	LINE,WRLD2SCR

DRAWSQUARE:
	LD	A,LOGIMP
	LD	(LOGOP),A
	LD	A,SQRCOLOR
	LD	(FORCLR),A

	LD	(D.LU),DE		;LEFT-UP CORNER
	LD	A,E
	ADD	A,C
	LD	E,A
	LD	(D.LD),DE		;LEFT-DOWN CORNER
	LD	A,D
	ADD	A,B
	LD	D,A
	LD	(D.RD),DE		;RIGTH-DOWN CORNER
	LD	A,E
	SUB	C
	LD	E,A
	LD	(D.RU),DE		;RIGTH-UP CORNER
	LD	BC,CENTRAL.P1
	CALL	WRLD2SCR
	LD	A,L
	ADD	A,7
	LD	D,A
	LD	(D.RU),DE		;RIGTH-UP CORNER IN SCR COORDENATES

	LD	DE,(D.RD)
	LD	BC,CENTRAL.P1
	CALL	WRLD2SCR
	LD	A,L
	ADD	A,7
	LD	D,A
	LD	(D.RD),DE		;RIGTH-DOWN CORNER IN SCR COORDENATES

	LD	DE,(D.LU)
	LD	BC,CENTRAL.P1
	CALL	WRLD2SCR
	LD	A,L
	ADD	A,7
	LD	D,A
	LD	(D.LU),DE		;LEFT-UP CORNER IN SCR COORDENATES

	LD	DE,(D.LD)
	LD	BC,CENTRAL.P1
	CALL	WRLD2SCR
	LD	A,L
	ADD	A,7
	LD	D,A
	LD	(D.LD),DE		;LEFT-DOWN CORNER IN SCR COORDENATES

	LD	BC,(D.RD)
	CALL	LINE			;LINE LEFT-DOWN TO RIGTH-DOWN
	LD	DE,(D.RD)
	LD	BC,(D.RU)
	CALL	LINE			;LINE RIGTH-DOWN TO RIGTH-UP
	LD	DE,(D.RU)
	LD	BC,(D.LU)
	CALL	LINE			;LINE RIGTH-UP TO LEFT-UP
	LD	DE,(D.LU)
	LD	BC,(D.LD)
	JP	LINE			;LINE LEFT-UP TO LEFT-DOWN

	DSEG
D.LU:	DW	0
D.LD:	DW	0
D.RU:	DW	0
D.RD:	DW	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = UP-LEFT CORNER OF REGION
;	BC = SQUARE SIZE

	CSEG

MARKREGION:
	LD	DE,(H.TILE)
	LD	BC,(H.SQRSIZ)

MR.Y:	PUSH	BC
	PUSH	DE

MR.X:	PUSH	BC
	PUSH	DE
	CALL	MARKTILE
	POP	DE
	INC	D
	POP	BC
	DJNZ	MR.X

	POP	DE
	INC	E
	POP	BC
	DEC	C
	JR	NZ,MR.Y
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: DE = ACTUAL TILE

	CSEG
	EXTRN	LMMM,VDPPAGE

MARKTILE:
	CALL	TIL2SCR
	LD	A,MASKPAGE
	LD	(VDPPAGE),A
	LD	A,LOGXOR
	LD	(LOGOP),A
	LD	HL,MASKX*256 + MASKY
	LD	BC,16*256 + 8
	JP	LMMM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = POINTER TO HEIGTH BUFFER

	CSEG
	EXTRN	MULTEA

NEWHEIGTH:
	LD	(SQR.BUF),DE
	LD	A,(DE)
	INC	DE
	PUSH	DE
	LD	E,HEIGTHCMD
	CALL	MULTEA
	POP	DE
	ADD	HL,DE
	LD	(SQR.PTR),HL
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: (H.TILE) = ACTUAL TILE POSITION

	CSEG
	EXTRN	HEIGTH,NUM2SPR

ZVAL2SPR:
	LD	DE,(H.TILE)
	LD	BC,HGTHMATRIX			;TODO: DON'T USE IT DIRECTLY
	CALL	HEIGTH
	LD	E,A
	LD	BC,NUMCOORD
	JP	NUM2SPR

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT: (SQR.PTR) = POINTER TO FIRST FREE POSITION
;	(SQR.BUF) = POINTER TO BUFFER BEGINNING

	CSEG
	EXTRN	NUM2SPR

SQR2SPR:LD	HL,(SQR.PTR)
	LD	DE,(SQR.BUF)
	OR	A
	SBC	HL,DE
	LD	E,L
	LD	BC,NUMCOORD
	JP	NUM2SPR

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG

DELSQUARE:
	LD	HL,(SQR.BUF)
	LD	A,(HL)
	OR	A
	RET	Z			;THERE IS NOTHING TO DELETE

	DEC	(HL)			;DECREMENT COUNT
	LD	HL,(SQR.PTR)
	LD	DE,HEIGTHCMD
	OR	A
	SBC	HL,DE
	LD	(SQR.PTR),HL		;DECREMENT POINTER TO 1ST FREE POS
	JP	ED.SCREEN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	H.CRUNCH

ADDSQUARE:
	LD	HL,(SQR.BUF)
	LD	DE,HEIGTHSIZ
	ADD	HL,DE			;MAX ADDRESS IN BUFFER
	EX	DE,HL			;DE = MAX ADDRESS IN BUFFER
	LD	HL,(SQR.PTR)
	LD	BC,HEIGTHCMD
	ADD	HL,BC			;HL = LAST ADDRESS USED IN BUFFER
	EX	DE,HL
	OR	A
	SBC	HL,DE
	CALL	C,CANCEL		;CANCEL IF NOT ENOUGH ROOM

	LD	HL,(SQR.BUF)		;INCREMENT NUMBER OF SQUARES
	INC	(HL)
	LD	HL,(SQR.PTR)
	LD	DE,(H.TILE)
	LD	BC,(H.SQRSIZ)
	LD	A,(H.ZVAL)
	CALL	H.CRUNCH
	LD	(SQR.PTR),HL
	RET

	DSEG
SQR.PTR:	DW	0
SQR.BUF:	DW	0


