
	INCLUDE	SHIKE2.INC
	INCLUDE	SPRITE.INC
	INCLUDE	DATA.INC

GLOBEPAT	EQU	TALKPAT
WHITEPAT	EQU	TALKPAT+16

GLOBESPR	EQU	TALKSPR
WHITESPR	EQU	TALKSPR+4

TIMECNT		EQU	15
TALKSIZ		EQU	14

	CSEG
	PUBLIC	TALKINIT
	EXTRN	WHITEDEF,CARTPAGE,SPRITE,SETCOLSPR

TALKINIT:
	LD	E,LEVELPAGE
	CALL	CARTPAGE
	LD	C,WHITEPAT
	LD	DE,WHITEDEF
	LD	B,4
	CALL	SPRITE

	LD	C,GLOBESPR
	LD	E,1
	LD	B,4
	CALL	SETCOLSPR

	LD	C,WHITESPR
	LD	E,15
	LD	B,4
	JP	SETCOLSPR

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	IX = POINTER TO THE CHARACTER
;	DE = STRING POINTER
;	BC = CALLBACK FUNCTION
;OUTPUT: Z = 1 WHEN THERE IS SOME ERROR

	CSEG
	PUBLIC	TELL
	EXTRN	STRLEN

TELL:	LD	A,(TIME)
	OR	A
	JR	Z,T.OK
	XOR	A
	RET

T.OK:	LD	(CALBACK),BC
	LD	(TELLER),IX
	LD	(STRING),DE
	LD	A,TALKSIZ
	LD	(BEGIN),A
	XOR	A
	LD	(AVOID),A
	LD	A,1
	LD	(TIME),A
	RET


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	(STRING) = STRING
;	(TELLER) = SCREEN LOCATION
;	(TIME) = TIME OF THE TALK
;	(CALBACK) = CALLBACK FUNCTION

	CSEG
	PUBLIC	TALKHOOK
	EXTRN	STRLEN,PTRCAL,EDRUN,HIDESPR,VDPSTAT


TALKHOOK:
	LD	A,(EDRUN)
	OR	A
	JP	NZ,HIDETALK		;WE DON'T WANT TALKS IN EDITOR

	LD	A,(TIME)		;TIME = 0 => NO TALK, RETURN
	OR	A
	RET	Z

	PUSH	AF
	LD	A,(VDPSTAT)
	AND	40H
	JR	Z,T.DEC
        CALL	AVOIDTALK		;AVOID COLISSIONS WITH MOUSE
	LD	C,MOUSESPR
	CALL	HIDESPRITE

T.DEC:	POP	AF
	DEC	A
	LD	(TIME),A
	JP	NZ,PUTTALK		;--TIME != 0 => UPDATE COORDENATES

	LD	A,(BEGIN)		;--TIME = 0 => NEXT CHARACTER
	OR	A
	JR	Z,T.NEXT
	DEC	A			;WE HAVE FREE SPACE TO THE LEFT
	LD	(BEGIN),A		;DON'T PASS TO NEXT CHARACTER
	JR	T.STR

T.NEXT:	LD	HL,(STRING)		;WE DON'T HAVE FREE SPACE TO THE LEFT
	INC	HL			;PASS TO NEXT CHARACTER
	LD	(STRING),HL

T.STR:	LD	DE,(STRING)
	LD	A,(DE)
	OR	A
	JR	NZ,T.BODY
	CALL	HIDETALK		;HIDE TALK WHEN STRING IS EMPTY
	LD	IX,(TELLER)
	LD	HL,(CALBACK)
	LD	A,L
	OR	H
	CALL	NZ,PTRCAL
	RET

T.BODY:	LD	A,(BEGIN)
	CALL	DEFTALK			;DEFINE SPRITE
	LD	DE,TALKBUF
	LD	C,GLOBEPAT
	LD	B,4
	CALL	SPRITE			;COPY TO VRAM THE NEW SPRITE
	CALL	PUTTALK
	LD	A,TIMECNT
	LD	(TIME),A
	RET

	DSEG
T.PTR:	DW	0
T.POS:	DW	0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	DE = POINTER TO STRING
;	A = INITIAL POSITION

	CSEG
	EXTRN	ADDAHL,GLOBEDEF,FONTSPR

DEFTALK:LD	(D.STR),DE
	LD	(D.CNT),A
	PUSH	AF
	PUSH	AF
	SRL	A			;CALCULATE INITIAL ADDRESS
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	HL,TALKBUF+4
	CALL	ADDAHL
	POP	AF
	AND	1
	JR	Z,D.1
	LD	DE,16
	ADD	HL,DE
D.1:	LD	(D.PTR),HL

	LD	HL,GLOBEDEF		;COPY EMPTY GLOBE TO BUFFER
	LD	DE,TALKBUF
	LD	BC,4*32
	LDIR
	POP	AF
	BIT	0,A
	JR	NZ,D.LEFT

D.RIGTH:LD	HL,(D.STR)
	LD	A,(HL)			;NEXT CHARACTER, CHECK END OF STRING
	OR	A
	RET	Z
	INC	HL
	LD	(D.STR),HL
	CALL	D.FONT
	LD	HL,(D.PTR)
	LD	B,8

D.LOOPR:LD	A,(DE)			;COPY THE FONT GRAPHIC
	OR	(HL)
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	D.LOOPR
	LD	A,8			;INCREMENT POINTER TO NEXT
	CALL	ADDAHL			;POSITION
	LD	(D.PTR),HL
	LD	A,(D.CNT)
	INC	A
	CP	TALKSIZ
	RET	Z
	LD	(D.CNT),A

D.LEFT:	LD	HL,(D.STR)
	LD	A,(HL)			;NEXT CHARACTER, CHECK END OF STRING
	OR	A
	RET	Z
	INC	HL
	LD	(D.STR),HL
	CALL	D.FONT
	LD	HL,(D.PTR)
	LD	B,8

D.LOOPL:LD	A,(DE)			;COPY THE GRAPHIC FONT, SHIFTED
	RLCA
	RLCA
	RLCA
	RLCA
	OR	(HL)
	LD	(HL),A
	INC	HL
	INC	DE
	DJNZ	D.LOOPL
	LD	A,(D.CNT)
	INC	A
	CP	TALKSIZ
	RET	Z
	LD	(D.CNT),A
	JR	D.RIGTH


;INPUT:	A = FONT NUMBER
;OUTPUT:DE = FONT ADDRESS

D.FONT:	SUB	' '			;FONTS BEGIN IN SPACE
	LD	L,A
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,FONTSPR
	ADD	HL,DE
	EX	DE,HL
	RET

	DSEG
D.PTR:	DW	0
D.STR:	DW	0
D.CNT:	DB	0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG
	EXTRN	HIDESPRITE

HIDETALK:
	LD	B,8
	LD	C,TALKSPR
H.LOOP:	PUSH	BC
	CALL	HIDESPRITE
	POP	BC
	INC	C
	DJNZ	H.LOOP
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;INPUT:	(TELLER) = CHARACTER POINTER


	CSEG
	EXTRN	PUTSPRITE

PUTTALK:LD	IY,(TELLER)
	LD	A,(IY+MOB.NEXT)		;IF THE CHARACTER IS NOT VISIBLE
	OR	(IY+MOB.NEXT+1)		;HIDE THE TALK
	JR	Z,HIDETALK

	LD	A,(AVOID)
	OR	A
	JR	Z,P.0
	LD	A,(IY+MOB.YD)
	ADD	A,(IY+MOB.YDSIZ)
	JR	NC,P.1

P.0:	LD	A,(IY+MOB.YD)
	SUB	16
	JR	NC,P.1
	ADD	A,16
	ADD	A,(IY+MOB.YDSIZ)

P.1:	LD	E,A
	LD	A,(IY+MOB.XD)
	ADD	A,8
	CP	255-64
	JR	C,P.2
	SUB	64

P.2:	LD	D,A
	LD	HL,P.DATA
	LD	C,GLOBESPR
	LD	B,GLOBEPAT

P.LOOP:	PUSH	HL
	PUSH	BC
	PUSH	DE
	LD	A,(HL)
	ADD	A,D
	LD	D,A
	CALL	PUTSPRITE
	POP	DE
	POP	BC
	POP	HL
	INC	HL
	LD	A,(HL)
	CP	-1
	RET	Z
	INC	C
	LD	A,B
	ADD	A,4
	LD	B,A
	JR	P.LOOP

P.DATA:	DB	0,16,32,48,0,16,32,48,-1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CSEG

AVOIDTALK:
	LD	A,(A.CNT)
	OR	A
	JR	Z,A.1
	DEC	A
	LD	(A.CNT),A
	RET

A.1:	LD	A,(AVOID)
	XOR	1
	LD	(AVOID),A
	LD	A,1
	LD	(A.CNT),A
	RET

	DSEG
A.CNT:	DB	0


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	DSEG

STRING:	DW	0
TELLER:	DW	0
CALBACK:DW	0
TIME:	DB	0
TALKBUF:DS	32*4
BEGIN:	DB	0
AVOID:	DB	0

